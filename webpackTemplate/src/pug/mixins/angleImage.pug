mixin angleImage(className, color, image, image_id)
    - var backgroundColor, backgroundColorMatrix, imageColor, imageColorMatrix
    case color 
        when "blue"
            - backgroundColor = "#a0dce4"
            - backgroundColorMatrix = "0 0 0 0 0.27451 0 0 0 0 0.752941 0 0 0 0 0.756863 0 0 0 0.3 0"
            - imageColor = "#46c0c1"
            - imageColorMatrix = "0 0 0 0 0.27451 0 0 0 0 0.752941 0 0 0 0 0.756863 0 0 0 0.6 0"
        when "pink"
            - backgroundColor = "#F4ACBA"
            - backgroundColorMatrix = "0 0 0 0 0.839216 0 0 0 0 0.666667 0 0 0 0 0.698039 0 0 0 0.62 0"
            - imageColor = "#D6AAB2"
            - imageColorMatrix = "0 0 0 0 0.839216 0 0 0 0 0.666667 0 0 0 0 0.698039 0 0 0 0.6 0"
    .angle-image(class= className)
        .angle-image__background
            svg(width="1121" height="823" viewBox="0 0 1121 823" fill="none" xmlns="http://www.w3.org/2000/svg")
                g(opacity="0.33" filter="url(#filter-background-angle-" + image_id + ")")
                    path(d="M532 581C168.69 566.659 0 351 0 -49L1146 12L1158 869C1042 671 988 599 532 581Z" fill=backgroundColor)
                defs
                    filter(id="filter-background-angle-" + image_id x="0" y="0" width="1166" height="920" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB")
                        feFlood(flood-opacity="0" result="BackgroundImageFix")
                        feBlend(mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape")
                        feColorMatrix(in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha")
                        feOffset(dx="10" dy="-2")
                        feGaussianBlur(stdDeviation="4")
                        feComposite(in2="hardAlpha" operator="arithmetic" k2="-1" k3="1")
                        feColorMatrix(type="matrix" values=backgroundColorMatrix)
                        feBlend(mode="multiply" in2="shape" result="effect-background-angle-" + image_id)
        .angle-image__image 
            svg(width="1036" height="793" viewBox="0 0 1036 793" fill="none" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink")
                g(filter="url(#filter-angle-" + image_id + ")")
                    mask(id="mask-angle-" + image_id style="mask-type:alpha" maskUnits="userSpaceOnUse" x="0" y="0" width="100%" height="100%")
                        path(d="M394.5 557C98.5 511.4 0 296 0 0H1045.5V793C929 557 764.5 614 394.5 557Z" fill="#D9D9D9")
                    g(mask="url(#mask-angle-" + image_id + ")")
                        path(d="M371.618 585.574C63.1531 538.019 -29.5946 270.626 -52 0H1044V823.5C943.957 602.41 757.198 645.018 371.618 585.574Z" fill=imageColor)
                        g(style="mix-blend-mode:luminosity" opacity="0.25")
                            rect(x="0" y="0" width="100%" height="100%" fill="url(#pattern-angle-" + image_id + ")")
                        g(style="mix-blend-mode:color" opacity="0.3")
                            path(d="M371.618 585.574C63.1531 538.019 -29.5946 270.626 -52 0H1044V823.5C943.957 602.41 757.198 645.018 371.618 585.574Z" fill=imageColor)
                defs
                    filter(id="filter-angle-" + image_id x="0" y="0" width="1053.5" height="793" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB")
                        feFlood(flood-opacity="0" result="BackgroundImageFix")
                        feBlend(mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape")
                        feColorMatrix(in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha")
                        feOffset(dx="8")
                        feGaussianBlur(stdDeviation="4")
                        feComposite(in2="hardAlpha" operator="arithmetic" k2="-1" k3="1")
                        feColorMatrix(type="matrix" values=imageColorMatrix)
                        feBlend(mode="multiply" in2="shape" result="effect-angle-" + image_id)
                    pattern(id="pattern-angle-" + image_id width="100%" height="100%")
                        image(xlink:href= image)